---
import Layout from "../../layouts/default.astro";
import PokemonPreview from "../../components/pokemon-preview.astro";

export const prerender = false;

const itemsPerPage = import.meta.env.ITEMS_PER_PAGE;

const apiUrl = new URL(`https://pokeapi.co`);
apiUrl.pathname = "/api/v2/pokemon";
apiUrl.searchParams.set("limit", itemsPerPage);

const page: number = Number(Astro.url.searchParams.get("page") ?? 1);
apiUrl.searchParams.set("offset", String((page - 1) * Number(itemsPerPage)));

let response: Response = new Response();
try {
	response = await fetch(apiUrl);
	if (!response.ok) {
		throw new Error(`Failed to fetch Pok√©mon.`);
	}
} catch (error) {
	console.error(`Failed to fetch Pok√©mon with: ${error}.`);
}

const headTitle = "Pok√©mon üê±";
const pageTitle = "Pok√©mon";

const { results } = response.ok ? await response.json() : [];

const maxPages = Math.ceil(1118 / Number(itemsPerPage));

const prevPage: number | boolean = page > 1 ? Math.max(1, page - 1) : false;
const prevUrl = new URL(Astro.url);
prevUrl.searchParams.set("page", String(prevPage));

const nextPage: number | boolean =
	page < maxPages ? Math.min(page + 1, maxPages) : false;
const nextUrl = new URL(Astro.url);
nextUrl.searchParams.set("page", String(nextPage));

const pageNumberClass =
	page === 1
		? "first-page-number"
		: page === maxPages
			? "last-page-number"
			: "pagination";
---

<Layout pageTitle={pageTitle} headTitle={headTitle}>
	<h1>{pageTitle}</h1>

	<!-- <h3>Items Per Page: {itemsPerPage}</h3>

	<p>TODO: list every frickin' Pok√©mon</p> -->
	<section class="box">
		<ul class="list flex">
			{
				results.map((pokemon: { name: string }) => {
					return (
						<li class="item">
							<PokemonPreview pokemon={pokemon.name} />
						</li>
					);
				})
			}
		</ul>
	</section>
	<section class="pagination">
		<nav class="subnav flex">
			{
				prevPage ? (
					<a href={prevUrl}>
						<h3>&larr; Previous Page</h3>
					</a>
				) : null
			}
			<h3 class={pageNumberClass}>Page {page}</h3>
			{
				nextPage ? (
					<a href={nextUrl}>
						<h3>Next Page &rarr;</h3>
					</a>
				) : null
			}
		</nav>
	</section>
</Layout>

<style>
	.pagination {
		display: flex;
		align-items: center;
		justify-content: space-evenly;
		margin: auto;
	}

	.page-number {
		display: flex;
		align-items: center;
		margin: 0.5rem 0 0 0;
	}

	.first-page-number {
		display: flex;
		align-items: center;
		margin: 0.25rem 7rem;
	}

	.last-page-number {
		display: flex;
		align-items: center;
		margin: 0.25rem 8rem;
	}
</style>
